basePath: /
definitions:
  model.Class:
    properties:
      active:
        example: true
        type: boolean
      class_name:
        type: string
      class_tracher_id:
        type: string
      created_at:
        type: string
      created_by:
        example: vishal
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      floor_number:
        type: integer
      id:
        type: string
      number_of_student:
        type: integer
      school_id:
        type: string
      subjects_id:
        type: string
      trachers_id:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    required:
    - active
    - created_by
    - number_of_student
    - school_id
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.School:
    properties:
      active:
        example: true
        type: boolean
      admin_id:
        type: string
      board_type:
        type: string
      city:
        example: Metropolis
        type: string
      class_up_to:
        type: integer
      created_at:
        type: string
      created_by:
        example: vishal
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      director_id:
        example: e9b2a0e3-e86c-4386-8162-ae441ffa28c8
        type: string
      district:
        example: Central
        type: string
      domain:
        example: slrtce
        type: string
      hostel_id:
        type: string
      id:
        type: string
      lane:
        example: 1234 Elm St
        type: string
      pincode:
        example: 123456
        type: integer
      principle_id:
        type: string
      state:
        example: NY
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      village:
        example: Springfield
        type: string
    required:
    - active
    - city
    - created_by
    - director_id
    - district
    - domain
    - pincode
    - state
    type: object
  model.Teacher:
    properties:
      active:
        example: true
        type: boolean
      city:
        example: Metropolis
        type: string
      classes_id:
        type: string
      created_at:
        type: string
      created_by:
        example: vishal
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      district:
        example: Central
        type: string
      email:
        example: vishal
        type: string
      first_name:
        example: John
        type: string
      id:
        type: string
      joining_date:
        type: string
      lane:
        example: 1234 Elm St
        type: string
      last_name:
        example: Smith
        type: string
      middle_name:
        example: Doe
        type: string
      password:
        example: password
        type: string
      pincode:
        example: 123456
        type: integer
      salary:
        type: integer
      school_id:
        type: string
      skills:
        type: string
      state:
        example: NY
        type: string
      subjects_id:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      village:
        example: Springfield
        type: string
    required:
    - active
    - city
    - created_by
    - district
    - email
    - first_name
    - last_name
    - middle_name
    - password
    - pincode
    - school_id
    - state
    type: object
  model.User:
    properties:
      active:
        example: true
        type: boolean
      city:
        example: Metropolis
        type: string
      created_at:
        type: string
      created_by:
        example: vishal
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      district:
        example: Central
        type: string
      email:
        example: vishal
        type: string
      first_name:
        example: John
        type: string
      id:
        type: string
      lane:
        example: 1234 Elm St
        type: string
      last_name:
        example: Smith
        type: string
      middle_name:
        example: Doe
        type: string
      password:
        example: password
        type: string
      pincode:
        example: 123456
        type: integer
      state:
        example: NY
        type: string
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      village:
        example: Springfield
        type: string
    required:
    - city
    - created_by
    - district
    - email
    - first_name
    - last_name
    - middle_name
    - password
    - pincode
    - state
    type: object
  model.UserSignIn:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8000
info:
  contact: {}
  description: API for managing School operations
  title: Managment
  version: "1.0"
paths:
  /class/{id}:
    get:
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Class'
      security:
      - ApiKeyAuth: []
      summary: Get a class by ID
      tags:
      - classs
  /class/all:
    get:
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Class'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all classs
      tags:
      - classs
  /class/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Class object
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/model.Class'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Class'
      security:
      - ApiKeyAuth: []
      summary: Create a class
      tags:
      - classs
  /class/delete/{id}:
    delete:
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete a class
      tags:
      - classs
  /class/filter:
    get:
      parameters:
      - description: id
        in: query
        name: id
        type: string
      - description: school_id
        in: query
        name: school_id
        type: string
      - description: active
        in: query
        name: active
        type: boolean
      - description: created_by
        in: query
        name: created_by
        type: string
      - description: updated_by
        in: query
        name: updated_by
        type: string
      - description: class_tracher_id
        in: query
        name: class_tracher_id
        type: string
      - description: trachers_id
        in: query
        name: trachers_id
        type: string
      - description: subjects_id
        in: query
        name: subjects_id
        type: string
      - description: floor_number
        in: query
        name: floor_number
        type: string
      - description: class_name
        in: query
        name: class_name
        type: string
      - description: start date
        in: query
        name: start_date
        type: string
      - description: end date
        in: query
        name: end_date
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Class'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all classs based on given filters
      tags:
      - classs
  /class/update/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Class ID
        in: path
        name: id
        required: true
        type: string
      - description: Class object
        in: body
        name: class
        required: true
        schema:
          $ref: '#/definitions/model.Class'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Class'
      security:
      - ApiKeyAuth: []
      summary: Update a class
      tags:
      - classs
  /school/{id}:
    get:
      parameters:
      - description: School ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.School'
      security:
      - ApiKeyAuth: []
      summary: Get a school by ID
      tags:
      - schools
  /school/all:
    get:
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.School'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all schools
      tags:
      - schools
  /school/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: School object
        in: body
        name: school
        required: true
        schema:
          $ref: '#/definitions/model.School'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.School'
      security:
      - ApiKeyAuth: []
      summary: Create a school
      tags:
      - schools
  /school/delete/{id}:
    delete:
      parameters:
      - description: School ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete a school
      tags:
      - schools
  /school/filter:
    get:
      parameters:
      - description: email
        in: query
        name: domain
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: principle_id
        in: query
        name: principle_id
        type: string
      - description: active
        in: query
        name: active
        type: boolean
      - description: created_by
        in: query
        name: created_by
        type: string
      - description: updated_by
        in: query
        name: updated_by
        type: string
      - description: admin_id
        in: query
        name: admin_id
        type: string
      - description: director_id
        in: query
        name: director_id
        type: string
      - description: hostel_id
        in: query
        name: hostel_id
        type: string
      - description: lane
        in: query
        name: lane
        type: string
      - description: village
        in: query
        name: village
        type: string
      - description: city
        in: query
        name: city
        type: string
      - description: district
        in: query
        name: district
        type: string
      - description: pincode
        in: query
        name: pincode
        type: integer
      - description: state
        in: query
        name: state
        type: string
      - description: start date
        in: query
        name: start_date
        type: string
      - description: end date
        in: query
        name: end_date
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.School'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all schools based on given filters
      tags:
      - schools
  /school/update/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: School ID
        in: path
        name: id
        required: true
        type: string
      - description: School object
        in: body
        name: school
        required: true
        schema:
          $ref: '#/definitions/model.School'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.School'
      security:
      - ApiKeyAuth: []
      summary: Update a school
      tags:
      - schools
  /teacher/{id}:
    get:
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Teacher'
      security:
      - ApiKeyAuth: []
      summary: Get a teacher by ID
      tags:
      - teachers
  /teacher/all:
    get:
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Teacher'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all teachers
      tags:
      - teachers
  /teacher/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Teacher object
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/model.Teacher'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Teacher'
      security:
      - ApiKeyAuth: []
      summary: Create a teacher
      tags:
      - teachers
  /teacher/delete/{id}:
    delete:
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete a teacher
      tags:
      - teachers
  /teacher/filter:
    get:
      parameters:
      - description: email
        in: query
        name: email
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: school_id
        in: query
        name: school_id
        type: string
      - description: password
        in: query
        name: password
        type: string
      - description: active
        in: query
        name: active
        type: boolean
      - description: created_by
        in: query
        name: created_by
        type: string
      - description: updated_by
        in: query
        name: updated_by
        type: string
      - description: first_name
        in: query
        name: first_name
        type: string
      - description: middle_name
        in: query
        name: middle_name
        type: string
      - description: last_name
        in: query
        name: last_name
        type: string
      - description: salary
        in: query
        name: salary
        type: integer
      - description: lane
        in: query
        name: lane
        type: string
      - description: village
        in: query
        name: village
        type: string
      - description: city
        in: query
        name: city
        type: string
      - description: district
        in: query
        name: district
        type: string
      - description: pincode
        in: query
        name: pincode
        type: integer
      - description: state
        in: query
        name: state
        type: string
      - description: subjects id
        in: query
        name: subjects_id
        type: string
      - description: joining_date
        in: query
        name: joining_date
        type: string
      - description: skills
        in: query
        name: skills
        type: string
      - description: classes_id
        in: query
        name: classes_id
        type: string
      - description: teacher_name
        in: query
        name: teacher_name
        type: string
      - description: start date
        in: query
        name: start_date
        type: string
      - description: end date
        in: query
        name: end_date
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Teacher'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all teachers based on given filters
      tags:
      - teachers
  /teacher/update/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: string
      - description: Teacher object
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/model.Teacher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Teacher'
      security:
      - ApiKeyAuth: []
      summary: Update a teacher
      tags:
      - teachers
  /user/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - users
  /user/all:
    get:
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
  /user/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
      summary: Create a user
      tags:
      - users
  /user/delete/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - users
  /user/filter:
    get:
      parameters:
      - description: email
        in: query
        name: email
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: password
        in: query
        name: password
        type: string
      - description: active
        in: query
        name: active
        type: boolean
      - description: created_by
        in: query
        name: created_by
        type: string
      - description: updated_by
        in: query
        name: updated_by
        type: string
      - description: first_name
        in: query
        name: first_name
        type: string
      - description: middle_name
        in: query
        name: middle_name
        type: string
      - description: last_name
        in: query
        name: last_name
        type: string
      - description: lane
        in: query
        name: lane
        type: string
      - description: village
        in: query
        name: village
        type: string
      - description: city
        in: query
        name: city
        type: string
      - description: district
        in: query
        name: district
        type: string
      - description: pincode
        in: query
        name: pincode
        type: integer
      - description: state
        in: query
        name: state
        type: string
      - description: start date
        in: query
        name: start_date
        type: string
      - description: end date
        in: query
        name: end_date
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of results per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all users based on given filters
      tags:
      - users
  /user/signin:
    post:
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserSignIn'
      produces:
      - application/json
      responses:
        "200":
          description: Successful SignIn
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: SighIn user
      tags:
      - users
  /user/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successful SignUp
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: SignUp a user
      tags:
      - users
  /user/update/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Token
    type: apiKey
swagger: "2.0"
