// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/class/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classs"
                ],
                "summary": "Get all classs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Class"
                            }
                        }
                    }
                }
            }
        },
        "/class/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classs"
                ],
                "summary": "Create a class",
                "parameters": [
                    {
                        "description": "Class object",
                        "name": "class",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Class"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Class"
                        }
                    }
                }
            }
        },
        "/class/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "classs"
                ],
                "summary": "Delete a class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/class/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classs"
                ],
                "summary": "Get all classs based on given filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "school_id",
                        "name": "school_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "created_by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "updated_by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "class_tracher_id",
                        "name": "class_tracher_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "trachers_id",
                        "name": "trachers_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subjects_id",
                        "name": "subjects_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "floor_number",
                        "name": "floor_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "class_name",
                        "name": "class_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Class"
                            }
                        }
                    }
                }
            }
        },
        "/class/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classs"
                ],
                "summary": "Update a class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Class object",
                        "name": "class",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Class"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Class"
                        }
                    }
                }
            }
        },
        "/class/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classs"
                ],
                "summary": "Get a class by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Class"
                        }
                    }
                }
            }
        },
        "/school/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schools"
                ],
                "summary": "Get all schools",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.School"
                            }
                        }
                    }
                }
            }
        },
        "/school/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schools"
                ],
                "summary": "Create a school",
                "parameters": [
                    {
                        "description": "School object",
                        "name": "school",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.School"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.School"
                        }
                    }
                }
            }
        },
        "/school/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "schools"
                ],
                "summary": "Delete a school",
                "parameters": [
                    {
                        "type": "string",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/school/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schools"
                ],
                "summary": "Get all schools based on given filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "domain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "principle_id",
                        "name": "principle_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "created_by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "updated_by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "admin_id",
                        "name": "admin_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "director_id",
                        "name": "director_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "hostel_id",
                        "name": "hostel_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lane",
                        "name": "lane",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "village",
                        "name": "village",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pincode",
                        "name": "pincode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.School"
                            }
                        }
                    }
                }
            }
        },
        "/school/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schools"
                ],
                "summary": "Update a school",
                "parameters": [
                    {
                        "type": "string",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "School object",
                        "name": "school",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.School"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.School"
                        }
                    }
                }
            }
        },
        "/school/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schools"
                ],
                "summary": "Get a school by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "School ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.School"
                        }
                    }
                }
            }
        },
        "/teacher/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Get all teachers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Teacher"
                            }
                        }
                    }
                }
            }
        },
        "/teacher/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Create a teacher",
                "parameters": [
                    {
                        "description": "Teacher object",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            }
        },
        "/teacher/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Delete a teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/teacher/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Get all teachers based on given filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "school_id",
                        "name": "school_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "created_by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "updated_by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "first_name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "middle_name",
                        "name": "middle_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "last_name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "salary",
                        "name": "salary",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lane",
                        "name": "lane",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "village",
                        "name": "village",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pincode",
                        "name": "pincode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "subjects id",
                        "name": "subjects_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "joining_date",
                        "name": "joining_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "skills",
                        "name": "skills",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "classes_id",
                        "name": "classes_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "teacher_name",
                        "name": "teacher_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Teacher"
                            }
                        }
                    }
                }
            }
        },
        "/teacher/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Update a teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Teacher object",
                        "name": "teacher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            }
        },
        "/teacher/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Get a teacher by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Teacher"
                        }
                    }
                }
            }
        },
        "/user/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/user/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users based on given filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "created_by",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "updated_by",
                        "name": "updated_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "first_name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "middle_name",
                        "name": "middle_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "last_name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lane",
                        "name": "lane",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "village",
                        "name": "village",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pincode",
                        "name": "pincode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    }
                }
            }
        },
        "/user/signin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "SighIn user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserSignIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful SignIn",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "SignUp a user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful SignUp",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Class": {
            "type": "object",
            "required": [
                "active",
                "created_by",
                "number_of_student",
                "school_id"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "class_name": {
                    "type": "string"
                },
                "class_tracher_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string",
                    "example": "vishal"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "floor_number": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "number_of_student": {
                    "type": "integer"
                },
                "school_id": {
                    "type": "string"
                },
                "subjects_id": {
                    "type": "string"
                },
                "trachers_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.School": {
            "type": "object",
            "required": [
                "active",
                "city",
                "created_by",
                "director_id",
                "district",
                "domain",
                "pincode",
                "state"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "admin_id": {
                    "type": "string"
                },
                "board_type": {
                    "type": "string"
                },
                "city": {
                    "type": "string",
                    "example": "Metropolis"
                },
                "class_up_to": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string",
                    "example": "vishal"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "director_id": {
                    "type": "string",
                    "example": "e9b2a0e3-e86c-4386-8162-ae441ffa28c8"
                },
                "district": {
                    "type": "string",
                    "example": "Central"
                },
                "domain": {
                    "type": "string",
                    "example": "slrtce"
                },
                "hostel_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lane": {
                    "type": "string",
                    "example": "1234 Elm St"
                },
                "pincode": {
                    "type": "integer",
                    "example": 123456
                },
                "principle_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "village": {
                    "type": "string",
                    "example": "Springfield"
                }
            }
        },
        "model.Teacher": {
            "type": "object",
            "required": [
                "active",
                "city",
                "created_by",
                "district",
                "email",
                "first_name",
                "last_name",
                "middle_name",
                "password",
                "pincode",
                "school_id",
                "state"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "city": {
                    "type": "string",
                    "example": "Metropolis"
                },
                "classes_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string",
                    "example": "vishal"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "district": {
                    "type": "string",
                    "example": "Central"
                },
                "email": {
                    "type": "string",
                    "example": "vishal"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string"
                },
                "joining_date": {
                    "type": "string"
                },
                "lane": {
                    "type": "string",
                    "example": "1234 Elm St"
                },
                "last_name": {
                    "type": "string",
                    "example": "Smith"
                },
                "middle_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "pincode": {
                    "type": "integer",
                    "example": 123456
                },
                "salary": {
                    "type": "integer"
                },
                "school_id": {
                    "type": "string"
                },
                "skills": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "subjects_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "village": {
                    "type": "string",
                    "example": "Springfield"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "city",
                "created_by",
                "district",
                "email",
                "first_name",
                "last_name",
                "middle_name",
                "password",
                "pincode",
                "state"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "city": {
                    "type": "string",
                    "example": "Metropolis"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string",
                    "example": "vishal"
                },
                "deleted_at": {
                    "type": "string"
                },
                "deleted_by": {
                    "type": "string"
                },
                "district": {
                    "type": "string",
                    "example": "Central"
                },
                "email": {
                    "type": "string",
                    "example": "vishal"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string"
                },
                "lane": {
                    "type": "string",
                    "example": "1234 Elm St"
                },
                "last_name": {
                    "type": "string",
                    "example": "Smith"
                },
                "middle_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "pincode": {
                    "type": "integer",
                    "example": 123456
                },
                "state": {
                    "type": "string",
                    "example": "NY"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                },
                "village": {
                    "type": "string",
                    "example": "Springfield"
                }
            }
        },
        "model.UserSignIn": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Managment",
	Description:      "API for managing School operations",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
